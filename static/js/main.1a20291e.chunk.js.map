{"version":3,"sources":["redux/Auth/authSelectors.js","redux/Contacts/listAction.js","Components/NavBar/NavBar.module.css","Components/Navigation/Navigation.module.css","redux/Auth/authAction.js","redux/Auth/authOperation.js","Components/UserMenu/UserMenu.module.css","Components/AppBar/AppBar.module.css","Components/NavBar/NavBar.js","Components/Navigation/Navigation.js","img/404_error.jpg","Components/UserMenu/UserMenu.js","Components/AppBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","reportWebVitals.js","redux/Contacts/deleteListReduser.js","redux/Auth/authReduser.js","redux/store.js","index.js"],"names":["getIsAutheticated","state","auth","isAuthenticated","getUserName","user","name","getUserEmail","email","fetchStart","createAction","fetchSuccess","fetchError","addStart","addSuccess","addError","deleteStart","deleteSuccess","deleteError","upStart","upSuccess","upError","filterList","module","exports","registerStart","registerSuccess","registerError","loginStart","loginSuccess","loginError","logoutStart","logoutSuccess","logoutError","getCurrentUserStart","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","registerAuth","credentials","dispatch","a","post","response","data","message","loginAuth","logOutAuth","getCurrentUser","getState","persistedToken","get","connect","isLoggedIn","className","s","ul","exact","to","navLink","activeClassName","navLinkactive","Navigation","mapDispatchToProps","onLogout","src","avatar","alt","width","type","onClick","AppBar","div","this","props","Component","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","useSelector","HomePage","lazy","Login","Register","Contacts","App","onRefresh","fallback","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","createReducer","_","payload","filter","contact","id","combineReducers","initial","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReduser","contacts","deleteListReduser","preStor","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1a20291e.chunk.js","sourcesContent":["const getIsAutheticated = state => state.auth.isAuthenticated;\nconst getUserName = state => state.auth.user.name;\nconst getUserEmail = state => state.auth.user.email;\n\nexport { getIsAutheticated, getUserName, getUserEmail };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchStart = createAction('fetchStart');\nexport const fetchSuccess = createAction('fetchSuccess');\nexport const fetchError = createAction('fetchError');\n\nexport const addStart = createAction('addStart');\nexport const addSuccess = createAction('addSuccess');\nexport const addError = createAction('addError');\n\nexport const deleteStart = createAction('deleteStart');\nexport const deleteSuccess = createAction('deleteSuccess');\nexport const deleteError = createAction('deleteError');\n\nexport const upStart = createAction('upStart');\nexport const upSuccess = createAction('upSuccess');\nexport const upError = createAction('upError');\n\nexport const filterList = createAction('filterList');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavBar_navLink__1ICG3\",\"navLinkactive\":\"NavBar_navLinkactive__1CKZh\",\"ul\":\"NavBar_ul__25xnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__31Gbw\",\"navLinkactive\":\"Navigation_navLinkactive__TNvzk\",\"ul\":\"Navigation_ul__1aHlD\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerStart = createAction('registerStart');\nexport const registerSuccess = createAction('registerSuccess');\nexport const registerError = createAction('registerError');\n\nexport const loginStart = createAction('loginStart');\nexport const loginSuccess = createAction('loginSuccess');\nexport const loginError = createAction('loginError');\n\nexport const logoutStart = createAction('logoutStart');\nexport const logoutSuccess = createAction('logoutSuccess');\nexport const logoutError = createAction('logoutError');\n\nexport const getCurrentUserStart = createAction('getCurrentUserStart');\nexport const getCurrentUserSuccess = createAction('getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('getCurrentUserError');\n","import axios from 'axios';\nimport {\n  loginStart,\n  loginSuccess,\n  loginError,\n  registerStart,\n  registerSuccess,\n  registerError,\n  logoutStart,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserStart,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './authAction';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst registerAuth = credentials => async dispatch => {\n  dispatch(registerStart());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst loginAuth = credentials => async dispatch => {\n  dispatch(loginStart());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logOutAuth = () => async dispatch => {\n  dispatch(logoutStart());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(getCurrentUserStart());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n// const deleteList = id => dispatch => {\n//   dispatch(deleteStart());\n//   axios\n//     .delete(`/contacts/${id}`)\n//     .then(() => dispatch(deleteSuccess(id)))\n//     .catch(error => dispatch(deleteError(error)));\n// };\n// const fetchList = () => dispatch => {\n//   dispatch(fetchStart());\n//   axios\n//     .get(`/contacts/`)\n//     .then(r => dispatch(fetchSuccess(r.data)))\n//     .catch(error => dispatch(fetchError(error)));\n// };\n\nexport { registerAuth, loginAuth, logOutAuth, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"UserMenu_navLink__1FY2v\",\"navLinkactive\":\"UserMenu_navLinkactive__2OFaK\",\"ul\":\"UserMenu_ul__2m60T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"AppBar_div__3ldqD\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getIsAutheticated } from '../../redux/Auth/authSelectors';\nimport s from './NavBar.module.css';\n\nfunction NavBar({ isLoggedIn }) {\n  return (\n    <ul className={s.ul}>\n      <li>\n        <NavLink\n          exact\n          to=\"/\"\n          className={s.navLink}\n          activeClassName={s.navLinkactive}\n        >\n          Главная\n        </NavLink>\n      </li>\n      {isLoggedIn && (\n        <li>\n          <NavLink\n            to=\"/contacts\"\n            className={s.navLink}\n            activeClassName={s.navLinkactive}\n          >\n            Контакты\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  );\n}\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsAutheticated(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navigation.module.css';\n\nexport default function Navigation() {\n  return (\n    <ul className={s.ul}>\n      <li>\n        <NavLink\n          to=\"/login\"\n          className={s.navLink}\n          activeClassName={s.navLinkactive}\n        >\n          Войти\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to=\"/register\"\n          className={s.navLink}\n          activeClassName={s.navLinkactive}\n        >\n          Регистрация\n        </NavLink>\n      </li>\n    </ul>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/404_error.a378b0df.jpg\";","import React from 'react';\nimport s from './UserMenu.module.css';\nimport { connect } from 'react-redux';\nimport avatar from '../../img/404_error.jpg';\nimport { getUserEmail } from '../../redux/Auth/authSelectors';\nimport { logOutAuth } from '../../redux/Auth/authOperation';\n\nconst UserMenu = ({ email, onLogout }) => {\n  return (\n    <div className={s.ul}>\n      <img src={avatar} alt=\"\" width=\"32\" className={s.navLink} />\n      <span className={s.navLink}>{email}</span>\n      <button type=\"button\" onClick={onLogout}>\n        Выйти\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  email: getUserEmail(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: logOutAuth,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from '../NavBar/NavBar';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport s from './AppBar.module.css';\nimport { getIsAutheticated } from '../../redux/Auth/authSelectors';\n\nexport class AppBar extends Component {\n  render() {\n    return (\n      <div className={s.div}>\n        <NavBar />\n        {this.props.isAuthenticated ? <UserMenu /> : <Navigation />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAutheticated(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBar);\n","import { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsAutheticated } from '../redux/Auth/authSelectors';\n\nfunction PrivateRoute({\n  children,\n  isLoggedIn,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  //   const isLoggedIn = useSelector(getIsAutheticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\nconst mapStateToProps = state => ({\n  isLoggedIn: getIsAutheticated(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsAutheticated } from '../redux/Auth/authSelectors';\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsAutheticated);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport AppBar from './Components/AppBar/AppBar';\nimport { getCurrentUser } from './redux/Auth/authOperation';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\n\nconst HomePage = lazy(() =>\n  import('./Page/HomePage/HomePage' /*webpackChunkName: \"HomePage\"*/),\n);\nconst Login = lazy(() =>\n  import('./Page/Login/Login' /*webpackChunkName: \"Login\"*/),\n);\nconst Register = lazy(() =>\n  import('./Page/Register/Register' /*webpackChunkName: \"Register\"*/),\n);\nconst Contacts = lazy(() =>\n  import('./Page/Contacts/Contacts' /*webpackChunkName: \"Contacts\"*/),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRefresh();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<h1>Lodding...</h1>}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={Contacts}\n              redirectTo=\"/login\"\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/\"\n              component={Login}\n            />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/\"\n              component={Register}\n            />\n            <Route component={HomePage} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  onRefresh: getCurrentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  deleteSuccess,\n  filterList,\n  addSuccess,\n  fetchSuccess,\n  upSuccess,\n} from './listAction';\n\nconst items = createReducer([], {\n  [fetchSuccess]: (_, { payload }) => payload,\n  [addSuccess]: (state, { payload }) => [...state, payload],\n  [deleteSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [upSuccess]: (state, { payload }) => [...state, payload],\n});\n\nconst filter = createReducer('', {\n  [filterList]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './authAction';\n\nconst initial = { name: null, email: null };\n\nconst user = createReducer(initial, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initial,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [logoutSuccess]: () => false,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  isAuthenticated,\n  user,\n  token,\n  error,\n});\n","import deleteListReduser from './Contacts/deleteListReduser';\nimport authReduser from './Auth/authReduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReduser),\n    contacts: deleteListReduser,\n  },\n  middleware,\n});\nconst persistor = persistStore(store);\n\nconst preStor = { store, persistor };\n\nexport default preStor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './normalize.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from '../src/redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}