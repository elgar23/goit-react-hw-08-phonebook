{"version":3,"sources":["redux/Contacts/listOperations.js","redux/Contacts/contacts-selectors.js","Components/UpDate/UpDate.js","Components/Contacts/Contact.js","Components/Phonebook/Phonebook.js","Components/Filter/Filter.js","Components/Alert/Alert.js","Page/Contacts/Contacts.js","Page/Contacts/Contacts.module.css","Components/Contacts/Contacts.module.css","Components/UpDate/UpData.module.css","Components/Phonebook/Phonebook.module.css","Components/Filter/Filter.module.css","Components/Alert/Alert.module.css"],"names":["fetchList","dispatch","fetchStart","axios","get","then","r","fetchSuccess","data","catch","error","fetchError","message","upList","id","text","number","item","name","upStart","patch","upSuccess","upError","getContactsItems","state","contacts","items","getFilter","filter","getFilterContact","createSelector","filterToLowerCase","toLowerCase","includes","UpDate","alert","phonebookValue","e","target","value","setState","numberValue","btnClick","preventDefault","props","onUp","setTimeout","upListFetch","prevProps","prevState","this","map","className","s","form","onSubmit","label","input","type","placeholder","onChange","max","disabled","button","Component","mapDispatchToProps","connect","Contact","clickUp","onClick","div","TransitionGroup","component","ul","CSSTransition","classNames","timeout","li","span","span2","deleteList","deleteStart","delete","deleteSuccess","deleteError","onClickUp","Phonebook","changeFilter","filterList","container","Alert","massage","h1","Contacts","text2","message2","onAddList","console","log","App","notif","in","appear","unmountOnExit","length","addStart","post","addSuccess","addError","module","exports"],"mappings":"sRAkCMA,EAAY,kBAAM,SAAAC,GACtBA,EAASC,eACTC,IACGC,IADH,aAEGC,MAAK,SAAAC,GAAC,OAAIL,EAASM,YAAaD,EAAEE,UAClCC,OAAM,SAAAC,GAAK,OAAIT,EAASU,YAAWD,EAAME,eAGxCC,EAAS,SAACC,EAAIC,EAAMC,GAAX,OAAsB,SAAAf,GACnC,IAAMgB,EAAO,CAAEC,KAAMH,EAAMC,OAAQA,GACnCf,EAASkB,eACThB,IACGiB,MADH,oBACsBN,GAAMG,GACzBZ,MAAK,SAAAC,GAAC,OAAIL,EAASoB,YAAUf,EAAEE,UAC/BC,OAAM,SAAAC,GAAK,OAAIT,EAASqB,YAAQZ,EAAME,e,QC9CrCW,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAE3CC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAmBC,YACvB,CAACP,EAAkBI,IACnB,SAACD,EAAOE,GACN,IAAMG,EAAoBH,EAAOI,cACjC,OAAON,EAAME,QAAO,qBAAGV,KAChBc,cAAcC,SAASF,S,wBCF5BG,E,4MAIJV,MAAQ,CAENT,KAAM,GACNC,OAAQ,GACRmB,OAAO,G,EAmCTC,eAAiB,SAAAC,GACQ,KAAnBA,EAAEC,OAAOC,OACX,EAAKC,SAAS,CAAEzB,KAAMsB,EAAEC,OAAOC,S,EAGnCE,YAAc,SAAAJ,GAAC,OAAI,EAAKG,SAAS,CAAExB,OAAQqB,EAAEC,OAAOC,S,EAEpDG,SAAW,SAAAL,GACTA,EAAEM,iBACsB,KAApB,EAAKnB,MAAMT,KACb,EAAK6B,MAAMC,KAAK,EAAKD,MAAM9B,GAAI,EAAK8B,MAAM1B,KAAM,EAAKM,MAAMR,QAC5B,KAAtB,EAAKQ,MAAMR,OACpB,EAAK4B,MAAMC,KAAK,EAAKD,MAAM9B,GAAI,EAAKU,MAAMT,KAAM,EAAK6B,MAAM5B,QAE3D,EAAK4B,MAAMC,KAAK,EAAKD,MAAM9B,GAAI,EAAKU,MAAMT,KAAM,EAAKS,MAAMR,QAE7D,EAAKwB,SAAS,CAAEzB,KAAM,GAAIC,OAAQ,GAAIF,GAAI,KAC1CgC,YAAW,WACT,EAAKF,MAAMG,gBACV,M,wDAnDL,SAAmBC,EAAWC,GAAY,IAAD,OAIvC,EAA0BC,KAAK1B,MAAvBT,EAAR,EAAQA,KAER,IAFA,EAAcH,SAIZsC,KAAKN,MAAMnB,SACR0B,KAAI,SAAAd,GAAC,OAAIA,EAAEnB,KAAKc,iBAChBC,SAASlB,EAAKiB,gBACR,KAATjB,IACCmC,KAAK1B,MAAMW,MAcZ,OAZAe,KAAKV,SAAS,CAAEL,MAAO,SACvBW,YAAW,WACT,EAAKN,SAAS,CACZzB,KAAM,GACNC,OAAQ,OAET,UACH8B,YAAW,WACT,EAAKN,SAAS,CACZL,OAAO,MAER,KAILe,KAAKN,MAAMT,MAAMe,KAAK1B,MAAMW,S,oBAwB9B,WACE,MAAgCe,KAAK1B,MAA7BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQmB,EAAtB,EAAsBA,MACtB,OACE,uBAAMiB,UAAWC,IAAEC,KAAMC,SAAUL,KAAKR,SAAxC,UACE,uBAAOU,UAAWC,IAAEG,MAApB,SACE,uBAEEJ,UAAWC,IAAEI,MACbC,KAAK,OACLnB,MAAOxB,EACP4C,YAAY,+FACZC,SAAUV,KAAKd,mBARrB,OAYE,uBAAOgB,UAAWC,IAAEG,MAApB,SACE,uBAEEJ,UAAWC,IAAEI,MACbC,KAAK,SACLG,IAAI,aACJtB,MAAOvB,EACP2C,YAAY,4JACZC,SAAUV,KAAKT,gBAGjBN,EAKA,wBAAQuB,KAAK,SAASI,UAAQ,EAACV,UAAWC,IAAEU,OAA5C,8DAJA,wBAAQL,KAAK,SAASN,UAAWC,IAAEU,OAAnC,qE,GA3FWC,aA4GfC,EAAqB,CACzBpB,KAAMhC,EACNkC,YAAa/C,GAGAkE,eATS,SAAA1C,GAAK,MAAK,CAChCC,SAAUF,EAAiBC,MAQWyC,EAAzBC,CAA6ChC,GC7GtDiC,E,4MACJ3C,MAAQ,CACN4C,SAAS,G,EAUXC,QAAU,SAAAhC,GACR,EAAKG,SAAS,CAAE4B,QAAS/B,K,uDAR3B,WACEa,KAAKN,MAAM5C,YACPkD,KAAK1B,MAAM4C,SACblB,KAAKV,SAAS,CAAE4B,SAAS,M,oBAQ7B,WAAU,IAAD,OACP,OACE,qBAAKhB,UAAWC,IAAEiB,IAAlB,SACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKpB,UAAWC,IAAEoB,GAA7C,SACGvB,KAAKN,MAAMnB,SAAS0B,KAAI,SAAAd,GAAC,OACxB,cAACqC,EAAA,EAAD,CAA0BC,WAAYtB,IAAGuB,QAAS,IAAlD,SACE,qBAAIxB,UAAWC,IAAEwB,GAAe/D,GAAIuB,EAAEvB,GAAtC,UACE,iCACE,sBAAMsC,UAAWC,IAAEyB,KAAnB,SAA0BzC,EAAEnB,OAC5B,sBAAMkC,UAAWC,IAAE0B,MAAnB,SAA2B1C,EAAErB,YAE/B,wBACEoC,UAAWC,IAAEU,OACbL,KAAK,SACLW,QAAS,kBAAM,EAAKA,SAAS,EAAK7C,MAAM4C,UAH1C,SAKG,EAAK5C,MAAM4C,QAAU,6CAAY,qDAEpC,wBACEhB,UAAWC,IAAEU,OACbL,KAAK,SACLW,QAAS,kBAAM,EAAKzB,MAAMoC,WAAW3C,EAAEvB,KAHzC,wDAOC,EAAKU,MAAM4C,SACV,cAAC,EAAD,CACEtD,GAAIuB,EAAEvB,GACNqB,MAAO,EAAKS,MAAMT,MAClBjB,KAAMmB,EAAEnB,KACRF,OAAQqB,EAAErB,WAxBUqB,EAAEvB,KADVuB,EAAEvB,e,GArBZkD,aA8DhBC,EAAqB,CACzBe,WHjDiB,SAAAlE,GAAE,OAAI,SAAAb,GACvBA,EAASgF,eACT9E,IACG+E,OADH,oBACuBpE,IACpBT,MAAK,kBAAMJ,EAASkF,YAAcrE,OAClCL,OAAM,SAAAC,GAAK,OAAIT,EAASmF,YAAY1E,EAAME,eG6C7CZ,UAAWA,EACXqF,UAAWxE,GAGEqD,eAVS,SAAA1C,GACtB,MAAO,CAAEC,SAAUI,EAAiBL,MASEyC,EAAzBC,CAA6CC,G,iBC7EvCmB,E,4MAInB9D,MAAQ,CACNT,KAAM,GACNC,OAAQ,I,EAGVoB,eAAiB,SAAAC,GAAC,OAAI,EAAKG,SAAS,CAAEzB,KAAMsB,EAAEC,OAAOC,S,EACrDE,YAAc,SAAAJ,GAAC,OAAI,EAAKG,SAAS,CAAExB,OAAQqB,EAAEC,OAAOC,S,EAEpDG,SAAW,SAAAL,GACTA,EAAEM,iBACF,EAAKC,MAAMR,eAAe,EAAKZ,MAAMT,KAAM,EAAKS,MAAMR,QACtD,EAAKwB,SAAS,CAAEzB,KAAM,GAAIC,OAAQ,M,4CAEpC,WACE,MAAyBkC,KAAK1B,MAAtBT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMoC,UAAWC,IAAEC,KAAMC,SAAUL,KAAKR,SAAxC,UACE,wBAAOU,UAAWC,IAAEG,MAApB,+BAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACLnB,MAAOxB,EACP4C,YAAY,gEACZC,SAAUV,KAAKd,oBAInB,wBAAOgB,UAAWC,IAAEG,MAApB,2CAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,SACLG,IAAI,aACJtB,MAAOvB,EACP2C,YAAY,6HACZC,SAAUV,KAAKT,iBAGnB,uBACA,wBAAQiB,KAAK,SAASN,UAAWC,IAAEU,OAAnC,gH,GA5C+BC,a,iBC2BjCC,EAAqB,CACzBsB,aAAcC,KAGDtB,eARS,SAAA1C,GAAK,MAAK,CAChCI,OAAQD,EAAUH,MAOoByC,EAAzBC,EA7BA,SAAC,GAA8B,IAA5BtC,EAA2B,EAA3BA,OAAQ2D,EAAmB,EAAnBA,aACxB,OACE,qBAAKnC,UAAWC,IAAEoC,UAAlB,SACE,0EACS,uBACP,uBACElD,MAAOX,EACPwB,UAAWC,IAAEI,MACbC,KAAK,OACLC,YAAY,iEACZC,SAAU,SAAAvB,GAAC,OAAIkD,EAAalD,EAAEC,OAAOC,kB,iBCbhC,SAASmD,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QAC9B,OACE,qBAAKvC,UAAWC,IAAEiB,IAAlB,SACE,oBAAIlB,UAAWC,IAAEuC,GAAjB,SAAsBD,M,ICStBE,E,4MACJrE,MAAQ,CACNT,KAAM,GACN+E,MAAO,GACPlF,SAAS,EACTmF,UAAU,EACV5D,OAAO,G,EAkDTC,eAAiB,SAACrB,EAAMC,GAEX,KAATD,GACW,KAAXC,IAGoC,IAFpC,EAAK4B,MAAMnB,SACR0B,KAAI,SAAAd,GAAC,OAAIA,EAAEnB,KAAKc,iBAChBC,SAASlB,EAAKiB,eAEjB,EAAKY,MAAMoD,UAAUjF,EAAMC,IAE3B,EAAKwB,SAAS,CAAEuD,UAAU,EAAMD,MAAO,uGACvChD,YAAW,WACT,EAAKN,SAAS,CAAEuD,UAAU,EAAOD,MAAO,OACvC,MAGH,EAAKlD,MAAMnB,SACR0B,KAAI,SAAAd,GAAC,OAAIA,EAAEnB,KAAKc,iBAChBC,SAASlB,EAAKiB,gBAEjB,EAAKQ,SAAS,CAAEzB,U,EAIpBoB,MAAQ,SAAAE,GACFA,IACF4D,QAAQC,IAAI7D,GACZ,EAAKG,SAAS,CAAEL,MAAOE,M,wDA1E3B,SAAmBW,EAAWC,GAAY,IAAD,OAKvC,EAA0BC,KAAK1B,MAAvBT,EAAR,EAAQA,KAUR,OAVA,EAAcH,SAGZsC,KAAKN,MAAMnB,SACR0B,KAAI,SAAAd,GAAC,OAAIA,EAAEnB,KAAKc,iBAChBC,SAASlB,EAAKiB,gBACR,KAATjB,GAEAmC,KAAKV,SAAS,CAAEL,OAAO,KAEA,IAArBe,KAAK1B,MAAMW,OACbe,KAAKV,SAAS,CAAE5B,SAAS,EAAMkF,MAAO,+JACtC5C,KAAKV,SAAS,CAAEL,OAAO,SACvBW,YAAW,WACT,EAAKN,SAAS,CAAE5B,SAAS,EAAOG,KAAM,GAAI+E,MAAO,OAChD,MAGoB,SAArB5C,KAAK1B,MAAMW,OACbe,KAAKV,SAAS,CACZ5B,SAAS,EACTkF,MAAO,2MAET5C,KAAKV,SAAS,CAAEL,OAAO,SACvBW,YAAW,WACT,EAAKN,SAAS,CAAE5B,SAAS,EAAOG,KAAM,GAAI+E,MAAO,OAChD,WARL,I,oBAuDF,WAGE,OACE,sBAAK1C,UAAWC,IAAE8C,IAAlB,UACE,sBAAK/C,UAAWC,IAAE+C,MAAlB,UACE,cAAC1B,EAAA,EAAD,CACE2B,IAAI,EACJC,QAAQ,EACR3B,WAAYtB,IACZuB,QAAS,IACT2B,eAAa,EALf,SAOE,6CAEF,qBAAKnD,UAAU,QAAf,SACE,cAACsB,EAAA,EAAD,CACE2B,GAAInD,KAAK1B,MAAMZ,SAAWsC,KAAK1B,MAAMuE,SACrCpB,WAAW,QACXC,QAAS,IACT2B,eAAa,EAJf,SAME,cAACb,EAAD,CAAOC,QAASzC,KAAK1B,MAAMsE,eAIjC,cAAC,EAAD,CAAW1D,eAAgBc,KAAKd,iBAChC,cAACsC,EAAA,EAAD,CACE2B,GAAInD,KAAKN,MAAMnB,SAAS+E,OAAS,EACjC7B,WAAW,SACXC,QAAS,IACT2B,eAAa,EAJf,SAME,cAAC,EAAD,MAEF,cAAC,EAAD,CAASpE,MAAOe,KAAKf,e,GA1HN6B,aAqIjBC,EAAqB,CACzB+B,UPnIc,SAACjF,EAAMC,GAAP,OAAkB,SAAAf,GAChC,IAAMgB,EAAO,CAAEC,KAAMH,EAAMC,OAAQA,GACnCf,EAASwG,eACTtG,IACGuG,KAAK,YAAazF,GAClBZ,MAAK,SAAAC,GAAC,OAAIL,EAAS0G,YAAWrG,EAAEE,UAChCC,OAAM,SAAAC,GAAK,OAAIT,EAAS2G,YAASlG,EAAME,gBOgI7BsD,uBATS,SAAA1C,GAAK,MAAK,CAChCC,SAAUF,EAAiBC,MAQWyC,EAAzBC,CAA6C2B,I,mBCvJ5DgB,EAAOC,QAAU,CAAC,IAAM,sBAAsB,OAAS,yBAAyB,aAAe,+BAA+B,MAAQ,0B,mBCAtID,EAAOC,QAAU,CAAC,GAAK,qBAAqB,GAAK,qBAAqB,IAAM,sBAAsB,OAAS,yBAAyB,MAAQ,wBAAwB,YAAc,8BAA8B,KAAO,uBAAuB,WAAa,6BAA6B,MAAQ,wBAAwB,KAAO,yB,mBCA/TD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,OAAS,0BAA0B,MAAQ,yBAAyB,MAAQ,2B,mBCA7HD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,4B,mBCA5DD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,GAAK","file":"static/js/Contacts.a3271013.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n  addStart,\n  addSuccess,\n  addError,\n  deleteStart,\n  deleteSuccess,\n  deleteError,\n  fetchStart,\n  fetchSuccess,\n  fetchError,\n  upStart,\n  upSuccess,\n  upError,\n} from './listAction';\n\n// axios.defaults.baseURL = 'http://localhost:4000';\n\nconst addList = (text, number) => dispatch => {\n  const item = { name: text, number: number };\n  dispatch(addStart());\n  axios\n    .post('/contacts', item)\n    .then(r => dispatch(addSuccess(r.data)))\n    .catch(error => dispatch(addError(error.message)));\n};\n\nconst deleteList = id => dispatch => {\n  dispatch(deleteStart());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteSuccess(id)))\n    .catch(error => dispatch(deleteError(error.message)));\n};\nconst fetchList = () => dispatch => {\n  dispatch(fetchStart());\n  axios\n    .get(`/contacts`)\n    .then(r => dispatch(fetchSuccess(r.data)))\n    .catch(error => dispatch(fetchError(error.message)));\n};\n\nconst upList = (id, text, number) => dispatch => {\n  const item = { name: text, number: number };\n  dispatch(upStart());\n  axios\n    .patch(`/contacts/${id}`, item)\n    .then(r => dispatch(upSuccess(r.data)))\n    .catch(error => dispatch(upError(error.message)));\n};\n\nexport { addList, deleteList, fetchList, upList };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContactsItems = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getFilterContact = createSelector(\n  [getContactsItems, getFilter],\n  (items, filter) => {\n    const filterToLowerCase = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filterToLowerCase),\n    );\n  },\n);\n\nexport { getContactsItems, getFilterContact, getFilter };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './UpData.module.css';\nimport { connect } from 'react-redux';\nimport { upList, fetchList } from '../../redux/Contacts/listOperations';\nimport { getContactsItems } from '../../redux/Contacts/contacts-selectors';\n\n// import Contacts from '../../Page/Contacts/Contacts';\n// const newContact = new Contacts();\nclass UpDate extends Component {\n  static propTypes = {\n    phonebookValue: PropTypes.func,\n  };\n  state = {\n    // id: '',\n    text: '',\n    number: '',\n    alert: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (prevState.id !== this.props.id) {\n    //   this.setState({ id: this.props.id });\n    // }\n    const { text, message } = this.state;\n\n    if (\n      !message &&\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase()) &&\n      text !== '' &&\n      !this.state.alert\n    ) {\n      this.setState({ alert: 'name' });\n      setTimeout(() => {\n        this.setState({\n          text: '',\n          number: '',\n        });\n      }, 500);\n      setTimeout(() => {\n        this.setState({\n          alert: false,\n        });\n      }, 3000);\n      return;\n    }\n\n    this.props.alert(this.state.alert);\n  }\n\n  phonebookValue = e => {\n    if (e.target.value !== '') {\n      this.setState({ text: e.target.value });\n    }\n  };\n  numberValue = e => this.setState({ number: e.target.value });\n\n  btnClick = e => {\n    e.preventDefault();\n    if (this.state.text === '') {\n      this.props.onUp(this.props.id, this.props.name, this.state.number);\n    } else if (this.state.number === '') {\n      this.props.onUp(this.props.id, this.state.text, this.props.number);\n    } else {\n      this.props.onUp(this.props.id, this.state.text, this.state.number);\n    }\n    this.setState({ text: '', number: '', id: '' });\n    setTimeout(() => {\n      this.props.upListFetch();\n    }, 250);\n  };\n  render() {\n    const { text, number, alert } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.btnClick}>\n        <label className={s.label}>\n          <input\n            // required\n            className={s.input}\n            type=\"text\"\n            value={text}\n            placeholder=\"Введите новое имя\"\n            onChange={this.phonebookValue}\n          />\n        </label>\n        &nbsp;\n        <label className={s.label}>\n          <input\n            // required\n            className={s.input}\n            type=\"number\"\n            max=\"9999999999\"\n            value={number}\n            placeholder=\"Введите новый номер телефона\"\n            onChange={this.numberValue}\n          />\n        </label>\n        {!alert ? (\n          <button type=\"submit\" className={s.button}>\n            Обновить\n          </button>\n        ) : (\n          <button type=\"submit\" disabled className={s.button}>\n            Обновить\n          </button>\n        )}\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getContactsItems(state),\n});\n\nconst mapDispatchToProps = {\n  onUp: upList,\n  upListFetch: fetchList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpDate);\n","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {\n  deleteList,\n  fetchList,\n  upList,\n} from '../../redux/Contacts/listOperations';\nimport React, { Component } from 'react';\nimport { getFilterContact } from '../../redux/Contacts/contacts-selectors';\nimport UpDate from '../UpDate/UpDate';\n\nclass Contact extends Component {\n  state = {\n    clickUp: false,\n  };\n\n  componentDidMount() {\n    this.props.fetchList();\n    if (this.state.clickUp) {\n      this.setState({ clickUp: false });\n    }\n  }\n\n  onClick = e => {\n    this.setState({ clickUp: e });\n  };\n\n  render() {\n    return (\n      <div className={s.div}>\n        <TransitionGroup component=\"ul\" className={s.ul}>\n          {this.props.contacts.map(e => (\n            <CSSTransition key={e.id} classNames={s} timeout={250}>\n              <li className={s.li} key={e.id} id={e.id}>\n                <span>\n                  <span className={s.span}>{e.name}</span>\n                  <span className={s.span2}>{e.number}</span>\n                </span>\n                <button\n                  className={s.button}\n                  type=\"submit\"\n                  onClick={() => this.onClick(!this.state.clickUp)}\n                >\n                  {this.state.clickUp ? 'Закрыть' : 'Обновить'}\n                </button>\n                <button\n                  className={s.button}\n                  type=\"submit\"\n                  onClick={() => this.props.deleteList(e.id)}\n                >\n                  Удалить\n                </button>\n                {this.state.clickUp && (\n                  <UpDate\n                    id={e.id}\n                    alert={this.props.alert}\n                    name={e.name}\n                    number={e.number}\n                  />\n                )}\n              </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { contacts: getFilterContact(state) };\n};\n\nconst mapDispatchToProps = {\n  deleteList: deleteList,\n  fetchList: fetchList,\n  onClickUp: upList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\n\nContact.propTypes = {\n  contacts: PropTypes.array,\n  deleteList: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Phonebook.module.css';\n\nexport default class Phonebook extends Component {\n  static propTypes = {\n    phonebookValue: PropTypes.func,\n  };\n  state = {\n    text: '',\n    number: '',\n  };\n\n  phonebookValue = e => this.setState({ text: e.target.value });\n  numberValue = e => this.setState({ number: e.target.value });\n\n  btnClick = e => {\n    e.preventDefault();\n    this.props.phonebookValue(this.state.text, this.state.number);\n    this.setState({ text: '', number: '' });\n  };\n  render() {\n    const { text, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.btnClick}>\n        <label className={s.label}>\n          Имя\n          <input\n            className={s.input}\n            type=\"text\"\n            value={text}\n            placeholder=\"Введите имя\"\n            onChange={this.phonebookValue}\n          />\n        </label>\n\n        <label className={s.label}>\n          Номер\n          <input\n            className={s.input}\n            type=\"number\"\n            max=\"9999999999\"\n            value={number}\n            placeholder=\"Введите номер телефона\"\n            onChange={this.numberValue}\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className={s.button}>\n          Добавить контакт\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { filterList } from '../../redux/Contacts/listAction';\nimport { getFilter } from '../../redux/Contacts/contacts-selectors';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <div className={s.container}>\n      <label>\n        Фильтр <br />\n        <input\n          value={filter}\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Введите имя \"\n          onChange={e => changeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  changeFilter: filterList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport s from './Alert.module.css';\n\nexport default function Alert({ massage }) {\n  return (\n    <div className={s.div}>\n      <h3 className={s.h1}>{massage}</h3>\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport s from './Contacts.module.css';\n// import './App2.css';\nimport Contact from '../../Components/Contacts/Contact';\nimport Phonebook from '../../Components/Phonebook/Phonebook';\nimport Filter from '../../Components/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport Alert from '../../Components/Alert/Alert';\nimport { connect } from 'react-redux';\nimport { addList } from '../../redux/Contacts/listOperations';\nimport { getContactsItems } from '../../redux/Contacts/contacts-selectors';\n// import UpDate from '../../Components/UpDate/UpDate';\n\n// console.log(UpDate);\n\nclass Contacts extends Component {\n  state = {\n    text: '',\n    text2: '',\n    message: false,\n    message2: false,\n    alert: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (this.props.upDate !== prevState.alert) {\n    //   this.setState({ alert: this.props.upDate });\n    // }\n\n    const { text, message } = this.state;\n    if (\n      !message &&\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase()) &&\n      text !== ''\n    ) {\n      this.setState({ alert: true });\n    }\n    if (this.state.alert === true) {\n      this.setState({ message: true, text2: 'Такой контакт уже существует!' });\n      this.setState({ alert: false });\n      setTimeout(() => {\n        this.setState({ message: false, text: '', text2: '' });\n      }, 3000);\n      return;\n    }\n    if (this.state.alert === 'name') {\n      this.setState({\n        message: true,\n        text2: 'Контакт с таким именем уже существует!',\n      });\n      this.setState({ alert: false });\n      setTimeout(() => {\n        this.setState({ message: false, text: '', text2: '' });\n      }, 3000);\n      return;\n    }\n    // if (this.state.alert === 'number') {\n    //   this.setState({\n    //     message: true,\n    //     text2: 'Контакт с таким номером уже существует!',\n    //   });\n    //   this.setState({ alert: false });\n    //   setTimeout(() => {\n    //     this.setState({ message: false, text: '', text2: '' });\n    //   }, 3000);\n    //   return;\n    // }\n  }\n\n  phonebookValue = (text, number) => {\n    if (\n      text !== '' &&\n      number !== '' &&\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase()) === false\n    ) {\n      this.props.onAddList(text, number);\n    } else {\n      this.setState({ message2: true, text2: 'Заполните все поля' });\n      setTimeout(() => {\n        this.setState({ message2: false, text2: '' });\n      }, 3000);\n    }\n    if (\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase())\n    ) {\n      this.setState({ text });\n      return;\n    }\n  };\n  alert = e => {\n    if (e) {\n      console.log(e);\n      this.setState({ alert: e });\n    }\n  };\n\n  render() {\n    // console.log(this.props.upDate);\n\n    return (\n      <div className={s.App}>\n        <div className={s.notif}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames={s}\n            timeout={500}\n            unmountOnExit\n          >\n            <h1>Phonebook</h1>\n          </CSSTransition>\n          <div className=\"alert\">\n            <CSSTransition\n              in={this.state.message || this.state.message2}\n              classNames=\"alert\"\n              timeout={250}\n              unmountOnExit\n            >\n              <Alert massage={this.state.text2} />\n            </CSSTransition>\n          </div>\n        </div>\n        <Phonebook phonebookValue={this.phonebookValue} />\n        <CSSTransition\n          in={this.props.contacts.length > 1}\n          classNames=\"filter\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <Contact alert={this.alert} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: getContactsItems(state),\n  // upDate: getContact(state),\n});\n\nconst mapDispatchToProps = {\n  onAddList: addList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Contacts_App__1Wc8Q\",\"appear\":\"Contacts_appear__1PXfa\",\"appearActive\":\"Contacts_appearActive__2ay-4\",\"notif\":\"Contacts_notif__1z30w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Contacts_ul__2fCpe\",\"li\":\"Contacts_li__3a34W\",\"div\":\"Contacts_div__3Z0Ft\",\"button\":\"Contacts_button__1it9T\",\"enter\":\"Contacts_enter__1AK_T\",\"enterActive\":\"Contacts_enterActive__3_qws\",\"exit\":\"Contacts_exit__1swKR\",\"exitActive\":\"Contacts_exitActive__1V6Tk\",\"span2\":\"Contacts_span2__XyOhA\",\"span\":\"Contacts_span__rv6DR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"UpData_button__3d-Jx\",\"input\":\"UpData_input__38qPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__1CAn7\",\"button\":\"Phonebook_button__3hC-i\",\"label\":\"Phonebook_label__HEjLg\",\"input\":\"Phonebook_input__3Nu0B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__r-vWG\",\"container\":\"Filter_container__KsdJ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Alert_div__1OSOL\",\"h1\":\"Alert_h1__2kIzU\"};"],"sourceRoot":""}